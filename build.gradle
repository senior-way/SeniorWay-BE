plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.seniorway'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'  // JPA

	//메일 발송
	implementation 'org.springframework.boot:spring-boot-starter-mail'

	annotationProcessor 'org.projectlombok:lombok'

	// JWT 핵심 라이브러리
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// Spring Security (JWT 인증 필터 등에 필요)
	implementation 'org.springframework.boot:spring-boot-starter-security'

	// Spring Web (REST API)
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Bean Validation (@Valid 등)
	implementation 'org.springframework.boot:spring-boot-starter-validation'

//	// SLF4J + Logback
//	implementation("org.slf4j:slf4j-api:2.0.13")
//	implementation("ch.qos.logback:logback-classic:1.4.14")

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	runtimeOnly("com.h2database:h2")  // 개발/테스트용 DB
	implementation 'org.json:json:20230227'

	// swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

	// OAuth2 Client
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	// WebClilent
	implementation 'org.springframework.boot:spring-boot-starter-webflux'

	// WebSocket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	implementation 'org.springframework.boot:spring-boot-starter-activemq'

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive' // 선택, Reactive 사용 시
	implementation 'io.lettuce:lettuce-core' // Redis client

}

tasks.named('test') {
	useJUnitPlatform()
}
